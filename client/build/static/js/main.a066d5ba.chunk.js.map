{"version":3,"sources":["queries/index.js","Components/DeleteStudent.js","Components/EditStudent.js","Components/StudentDetails.js","Components/StudentList.js","Components/AddStudent.js","App.js","apollo/index.js","index.js"],"names":["getStudents","gql","getClassesQuery","addStudentMutation","deleteStudentMutation","editStudentMutation","getStudentQuery","DeleteStudent","props","useMutation","deleteStudent","console","log","id","onClick","e","preventDefault","variables","key","refetchQueries","query","EditStudent","useState","name","setName","age","setAge","test","setTest","editStudent","thisStudent","student","class","test1","onSubmit","setStudent","handleClick","className","onChange","target","value","type","placeholder","StudentDetails","StudentList","selectedStudent","setSelectedStudent","list","setList","useQuery","loading","error","data","allStudents","i","students","length","push","oneFE","oneFE2","twoFE","threeFE","classLists","members","map","classList","AddStudent","classId","setClassId","addStudent","classes","clas","App","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.a066d5ba.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nconst getStudents = gql`\n  {\n    students {\n      name\n      age\n      test1\n      id\n      class{\n        name\n      }\n    }\n  }\n`;\n\nconst getClassesQuery = gql`\n  {\n    classes {\n      name\n      id\n    }\n  }\n`;\n\nconst addStudentMutation = gql`\n  mutation addStudent(\n    $name: String!\n    $age: String!\n    $classId: ID!\n    $test1: String!\n  ) {\n    addStudent(name: $name, age: $age, classId: $classId, test1: $test1) {\n      name\n    }\n  }\n`;\n\nconst deleteStudentMutation = gql`\n  mutation deleteStudent(\n    $id: ID!\n  ) {\n    deleteStudent(id: $id){\n      id\n    }\n  }\n`;\n\nconst editStudentMutation = gql`\n  mutation editStudent(\n    $id: ID!\n    $name: String\n    $age: String\n    $test1: String\n  ) {\n    editStudent(id: $id, name: $name, age: $age, test1: $test1){\n      name\n      age\n      test1\n    }\n  }\n`;\n\nconst getStudentQuery = gql`\n  query($id: ID){\n    student(id: $id){\n      id\n      name\n      age\n      test1\n      class{\n        id\n        name\n        year\n        students{\n          name\n          id\n        }\n      }\n    }\n  }\n`\n\nexport { getClassesQuery, getStudents, addStudentMutation, getStudentQuery, deleteStudentMutation, editStudentMutation };\n","import React from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { getStudents, deleteStudentMutation, getStudentQuery } from \"../queries/index\";\r\n\r\nconst DeleteStudent = (props) => {\r\n    \r\n    const [deleteStudent] = useMutation(deleteStudentMutation);\r\n    console.log(props)\r\n    return (\r\n        <div id=\"delete-function\">\r\n            <h6 id=\"delete-student\" onClick={(e) => {\r\n                e.preventDefault();\r\n                deleteStudent({\r\n                    variables: { id: props.id, key: props.id },\r\n                    refetchQueries: [{ query: getStudents}, { query: getStudentQuery}],\r\n                });\r\n            }}>Delete Student</h6>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default DeleteStudent;","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { editStudentMutation, getStudents } from \"../queries/index\";\r\n\r\n\r\nconst EditStudent = ( props ) => {\r\n    //console.log(\"props\", props)\r\n    const [name, setName] = useState(); \r\n    const [age, setAge] = useState();\r\n    const [test, setTest] = useState();\r\n    const [editStudent] = useMutation(editStudentMutation);\r\n    const thisStudent = {id: props.student.id, name: name, age: age, class: props.student.class, test1: test};\r\n\r\n    \r\n    return (\r\n        <div id=\"edit-form\">\r\n            <h4>Edit Student</h4>\r\n            <form id=\"edit-student\" \r\n                onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    editStudent({\r\n                    variables: {\r\n                        id: props.student.id,\r\n                        name: name,\r\n                        age: age,\r\n                        test1: test\r\n                    },\r\n                    refetchQueries: [{ query: getStudents}]\r\n                    })\r\n                    props.setStudent(thisStudent);\r\n                    props.handleClick(thisStudent);\r\n                    \r\n                }}>\r\n                \r\n                <div className=\"field\" onChange={(e) => setName(e.target.value)}>\r\n                    \r\n                    <input type=\"text\"\r\n                    value={name}\r\n                    placeholder=\"Name\"/>\r\n                </div>\r\n                <div className=\"field\" onChange={(e) => setAge(e.target.value)}>\r\n                    \r\n                    <input type=\"text\"\r\n                    value={age}\r\n                    placeholder=\"Age\"/>\r\n                </div>\r\n                <div className=\"field\" onChange={(e) => setTest(e.target.value)}>\r\n                    \r\n                    <input type=\"text\"\r\n                    value={test}\r\n                    placeholder=\"Test 1 Score\"/>\r\n                </div>\r\n                <button id=\"submit-button\" type=\"submit\" >submit</button>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditStudent;","import React from \"react\";\r\nimport DeleteStudent from \"./DeleteStudent\"\r\nimport EditStudent from \"./EditStudent\";\r\n\r\n\r\nconst StudentDetails = ( props )=> {\r\n    const {setStudent} = props.setStudent;\r\n    console.log(\"student details props\",props);\r\n    \r\n    return (\r\n        <div id=\"student-details\" >\r\n            <h2>Name: {props.student.name}</h2>\r\n            <h3>Age: {props.student.age}</h3>\r\n            <h3>Class: {props.student.class.name}</h3>\r\n            <h3>Test 1 Score: {props.student.test1}</h3>\r\n            <EditStudent student={props.student} setStudent={props.setStudent} handleClick={props.handleClick}/>\r\n            <DeleteStudent id={props.id} student={props.student} setStudent={props.setStudent} />\r\n        </div>\r\n        \r\n    )\r\n    \r\n}\r\n\r\nexport default StudentDetails;","import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { getStudents } from \"../queries\";\nimport StudentDetails from \"./StudentDetails\";\n\n\n\nconst StudentList = () => {\n  const [selectedStudent, setSelectedStudent] = useState(\"\"); // set state for studentDetails app\n  const [list, setList] = useState('') // set state for displaying/hiding student lists\n  const { loading, error, data } = useQuery(getStudents);\n\n  \n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error!</p>;\n\n  const handleClick = (student)=> {\n    setSelectedStudent(student);\n  };\n\n  let allStudents = [];\n\n  for(let i = 0; i < data.students.length; i++){\n    allStudents.push(data.students[i])\n  }\n\n  // Individual class list variables\n  let oneFE = [];\n  let oneFE2 = [];\n  let twoFE = [];\n  let threeFE = [];\n  let classLists = \n      [ {name: \"allStudents\", members: allStudents},\n        {name: \"oneFE\", members: oneFE},\n        {name: \"oneFE2\", members: oneFE2},\n        {name: \"twoFE\", members: twoFE},\n        {name: \"threeFE\", members: threeFE}\n        ];\n\n\n  for(let i = 0; i < data.students.length; i++){\n    if(data.students[i].class.name === \"1FE1\"){\n      oneFE.push(data.students[i])\n    } else if (data.students[i].class.name === \"1FE2\"){\n      oneFE2.push(data.students[i])\n    } else if (data.students[i].class.name === \"2FE\"){\n      twoFE.push(data.students[i])\n    } else if (data.students[i].class.name === \"3FE\"){\n      threeFE.push(data.students[i])\n    }\n  }\n  \n  \n  return (\n    <div>\n      <div className=\"class-buttons\">\n        {\n          classLists.map(classList => (\n            \n              <button type=\"button\"\n                      className=\"main-buttons\"\n                      key={classList.name}\n                      onClick={()=> setList(classList.name)}\n              >\n              {classList.name}\n              </button>\n          \n          ))\n        }\n      </div>\n\n      <div className=\"class-list\">\n        {\n          list === \"allStudents\"? \n          <ul id=\"student-list\">\n            <h3>All Students</h3>\n            {data.students.map((student) => (\n              <li key={student.id} onClick={(e) => handleClick(student)}>{student.name}</li>\n            ))}\n          </ul>\n          : null\n        }\n      </div>\n      \n      <div className=\"class-list\">\n        {\n          list === \"oneFE\"?\n          <ul id=\"student-list\">\n          <h3>1FE1 Students</h3>\n          {oneFE.map((student) => (\n            <li key={student.id} onClick={(e) => handleClick(student)}>{student.name}</li>\n          ))}\n        </ul>\n        : null\n        }\n        \n      </div>\n      \n      <div className=\"class-list\">\n        {\n          list === \"oneFE2\"?\n          <ul id=\"student-list\">\n          <h3>1FE2 Students</h3>\n          {oneFE2.map((student) => (\n            <li key={student.id} onClick={(e) => handleClick(student)}>{student.name}</li>\n          ))}\n        </ul>\n        : null\n        }\n        \n      </div>\n      \n      <div className=\"class-list\">\n        {\n          list === \"twoFE\"?\n          <ul id=\"student-list\">\n          <h3>2FE Students</h3>\n          {twoFE.map((student) => (\n            <li key={student.id} onClick={(e) => handleClick(student)}>{student.name}</li>\n          ))}\n        </ul>\n        : null\n        }  \n      </div>\n      \n      <div className=\"class-list\">\n        {\n          list === \"threeFE\"?\n          <ul id=\"student-list\">\n          <h3>3FE Students</h3>\n          {threeFE.map((student) => (\n            <li key={student.id} onClick={(e) => handleClick(student)}>{student.name}</li>\n          ))}\n        </ul>\n        : null\n        }\n      </div>\n\n      <div>{\n        selectedStudent ? \n        <div>\n          <StudentDetails key={selectedStudent.id}\n            id={selectedStudent.id}\n            student={selectedStudent}\n            setStudent={setSelectedStudent}\n            handleClick={handleClick}/>\n          </div>\n        : <p>No Student Selected</p>\n      }\n      </div>\n    </div>\n\n    \n  );\n};\n\nexport default StudentList;\n","import React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { getClassesQuery, addStudentMutation, getStudents } from \"../queries/index\";\n\nconst AddStudent = () => {\n  const { data, loading, error } = useQuery(getClassesQuery);\n\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [classId, setClassId] = useState(\"\");\n  const [test, setTest] = useState(\"\");\n  const [addStudent] = useMutation(addStudentMutation);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error!</p>;\n\n  return (\n    <form\n      id=\"add-student\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        addStudent({\n          variables: {\n            name,\n            age,\n            classId: classId,\n            test1: test,\n          },\n          refetchQueries: [{ query: getStudents}]\n        });\n      }}\n    >\n      <div className=\"field\">\n        <label>Student Name:</label>\n        <input\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n      </div>\n\n      <div className=\"field\">\n        <label>Age:</label>\n        <input\n          type=\"text\"\n          value={age}\n          onChange={(e) => setAge(e.target.value)}\n        />\n      </div>\n      <div className=\"field\">\n        <label>Test1:</label>\n        <input\n          type=\"text\"\n          value={test}\n          onChange={(e) => setTest(e.target.value)}\n        />\n      </div>\n\n      <div className=\"field\">\n        <label>Class:</label>\n        <select value={classId} onChange={(e) => setClassId(e.target.value)}>\n          <option>Select Class</option>\n          {data.classes.map((clas) => (\n            <option key={clas.id} value={clas.id}>\n              {clas.name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <button>+</button>\n    </form>\n  );\n};\n\nexport default AddStudent;\n","import React from \"react\";\nimport StudentList from \"./Components/StudentList\";\nimport AddStudent from \"./Components/AddStudent\";\n\n\nfunction App() {\n\n    return (\n          <div id=\"main\">\n            <h1>Student Tracker</h1>\n            <StudentList data-testid=\"studentListApp\" />\n            <AddStudent />\n          </div>\n        \n    );\n  \n}\n\nexport default App;\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\n//import { ApolloClient, InMemoryCache } from '@apollo/react-hooks';\n\n//Apollo client setup\nexport const client = new ApolloClient({\n  uri: \"http://localhost:4001/graphql\",\n  cache: new InMemoryCache(),\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { client } from \"./apollo/index\";\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}